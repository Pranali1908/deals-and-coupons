package com.microservices.userdetails.controller;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/userdetails")
public class UserDetailsController {
    private final UserDetailsService userDetailsService;

    @Autowired
    public UserDetailsController(UserDetailsService userDetailsService) {
        this.userDetailsService = userDetailsService;
    }

    @PostMapping
    public ResponseEntity<UserDetails> createUser(@RequestBody UserDetails userDetails) {
        UserDetails createdUserDetails = userDetailsService.createUser(userDetails);
        return ResponseEntity.status(HttpStatus.CREATED).body(createdUserDetails);
    }

    @GetMapping
    public ResponseEntity<List<UserDetails>> getAllUsers() {
        List<UserDetails> users = userDetailsService.getAllUsers();
        return ResponseEntity.ok(users);
    }

    @GetMapping("/{id}")
    public ResponseEntity<UserDetails> getUserById(@PathVariable String id) {
        UserDetails userDetails = userDetailsService.getUserById(id);
        if (userDetails == null) {
            return ResponseEntity.notFound().build();
        }
        return ResponseEntity.ok(userDetails);
    }

    @PutMapping("/{id}")
    public ResponseEntity<UserDetails> updateUser(@PathVariable String id, @RequestBody UserDetails userDetails) {
        userDetails.setUserId(id);
        UserDetails updatedUserDetails = userDetailsService.updateUser(userDetails);
        return ResponseEntity.ok(updatedUserDetails);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteUser(@PathVariable String id) {
        userDetailsService.deleteUser(id);
        return ResponseEntity.noContent().build();
    }
}

